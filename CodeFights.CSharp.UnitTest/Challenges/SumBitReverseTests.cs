using Microsoft.VisualStudio.TestTools.UnitTesting;
using CodeFights.CSharp.Challenges;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CodeFights.CSharp.UnitTest;

namespace CodeFights.CSharp.Challenges.Tests
{
    [TestClass()]
    public class SumBitReverseTests
    {
        [TestMethod()]
        public void sumBitReverseTest()
        {
            var s = new SumBitReverse();
            var expected = "[[21,17],[17,61]]";
            var numbers = new long[] { 42, 61 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));

            expected = "[[1]]";
            numbers = new long[] { 1 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));

            expected = "[[1,1],[1,1]]";
            numbers = new long[] { 1, 1 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));

            expected = "[[1,1],[1,1]]";
            numbers = new long[] { 1, 2 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));

            expected = "[[1,1],[1,3]]";
            numbers = new long[] { 2, 3 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));

            expected = "[[1,1,1],[1,1,1],[1,1,1]]";
            numbers = new long[] { 1, 2, 4 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));

            expected = "[[9,13],[13,11]]";
            numbers = new long[] { 9, 11 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));

            expected = "[[80194812467589,840709041624353,99333417836421,253331082362337,70630650663603,281033509805303,441154717152175,112074089485705,141675882580119,522037529396417],[840709041624353,626507358910639,521504206285969,292155821378093,134248746244331,909313626980917,990747047443159,389336898996009,765849534569813,314129213331919],[99333417836421,521504206285969,1995979509201897,797677921445259,878031707190831,544847157864851,698407082486305,710904185916493,31064252960787,1573382904917521],[253331082362337,292155821378093,797677921445259,440849355098343,644631466117737,76606866640747,115743669307733,472947043349525,215955138870219,903671141167949],[70630650663603,134248746244331,878031707190831,644631466117737,1117915574245533,415212574278257,499944422398643,290678385630647,276720532385073,666642806303147],[281033509805303,909313626980917,544847157864851,76606866640747,415212574278257,382878972595043,641752067555653,124044036657177,524733760208323,175232066321749],[441154717152175,990747047443159,698407082486305,115743669307733,499944422398643,641752067555653,815544772319623,55743746210001,919614314585861,137716002724759],[112074089485705,389336898996009,710904185916493,472947043349525,290678385630647,124044036657177,55743746210001,215295257252171,265905040518953,921725939145417],[141675882580119,765849534569813,31064252960787,215955138870219,276720532385073,524733760208323,919614314585861,265905040518953,348246703920387,453921564306581],[522037529396417,314129213331919,1573382904917521,903671141167949,666642806303147,175232066321749,137716002724759,921725939145417,453921564306581,892685052880975]]";
            numbers = new long[] { 1283116999481424, 1253014717821278, 1995979509201897, 1763397420393372, 2235831148491066, 1531515890380172, 1631089544639246, 1722362058017368, 348246703920387, 1785370105761950 };
            Assert.AreEqual(expected, Util.JaggedArrayToString(s.sumBitReverse(numbers)));
        }
    }
}